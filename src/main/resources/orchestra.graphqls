type Project {
    id: ID!
    name:String!
    inChargeOf : ID!
    tasks : [Task]
}
type Task {
    id: ID!
    projectId : ID!
    description :String
}
type User {
    id: ID!
    name: String
    age: Int
}

type Query {
    projects(count: Int):[Project]
    tasks(count: Int):[Task]
    users(count: Int):[User]

    project(id: ID):Project
    task(id: ID):Task
    user(id: ID):User
}
type Mutation {
    createProject(name:String!,inChargeOf:String!):Project
    createTask(projectId:ID!,description:String!):Task
    createUser(name:String!,age:Int!):User
    deleteProject(id:ID!):Project
    deleteTask(id:ID!):Task
    deleteUser(id:ID!):User
    updateProject(id:ID!,name:String!,inChargeOf:ID!):Project
    updateTask(id:ID!,description:String!):Task
    updateUser(id:ID!,name:String!,age:Int!):User
}

#type Subscription {
#	taskDescriptionUpdated(taskId: String!): Task
#}